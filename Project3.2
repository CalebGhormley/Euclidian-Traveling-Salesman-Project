 #lang racket

(define (genTours n)
  (permutate (trevlist (makeList n) '()) 0))

(define (makeList n)
  (if (= n 0)
      null
      (cons n (makeList (- n 1)))))

(define (trevlist list acc)
  (if (null? list)
      acc
      (trevlist (cdr list) (cons (car list) acc))))

(define (count x)
  (cond
    ( (equal? x '()) 0)
    ( #t (+ 1 (count (cdr x))))
    )
  )

(define (permutate list n)
  (if (< n (factorial (length (cdr list))))
      (cons (cons (car list) (permutation (cdr list) n)) (permutate list (+ n 1)))
      null))

(define (permutation list n)
  (cond
    [(= n 0) list]
    [(>= n (factorial (length (cdr list)))) (cons (getitem list (truncate (/ n (factorial (length (cdr list)))))) (permutation (getlist list (truncate (/ n (factorial (length (cdr list)))))) (modulo n (factorial (length (cdr list))))))]
    [#t (cons (car list) (permutation (cdr list) n))]))

(define (getlist list a)
  (if (> a 0)
      (cons (car list) (getlist (cdr list) (- a 1)))
      (cdr list)))

(define (getitem list b)
  (if (> b 0)
      (getitem (cdr list) (- b 1))
      (car list)))

(define (factorial n)
  (if (> n 1)
      (* n (factorial (- n 1)))
      1))

(define (score indices tourstops)
  (calcDistance indices tourstops (car indices)))

(define (calcDistance indices tourstops start) 
  (if (null? (cdr tourstops))
    (pythag (getVertex indices (car tourstops)) start)
    (+ (pythag (getVertex indices (car tourstops)) (getVertex indices (car (cdr tourstops) )) ) (calcDistance indices (cdr tourstops) start))))

(define (pythag posone postwo)
  (sqrt (+ (expt ( - (car posone) (car postwo) ) 2.0) (expt ( - (car(cdr posone)) (car(cdr postwo)) ) 2.0))))

(define (getVertex vertices position)
  (if (= position 1)
   (car vertices)
   (getVertex (cdr vertices) (-  position 1))))

(define (etsp points)
  (calcShortest points (genTours (count points)) (score points (trevlist (makeList (length points)) '())) (trevlist (makeList (length points)) '())))

(define (calcShortest points lists value best)
  (if (null? (cdr lists))
      (if (< (score points (car lists)) value)
          (car lists)
          best)
      (if (< (score points (car lists)) value)
          (calcShortest points (cdr lists) (score points (car lists)) (car lists))
          (calcShortest points (cdr lists) value best))))
